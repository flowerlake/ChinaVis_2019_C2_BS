$(function () {
    // var whdef = 100/1920;// 表示1920的设计图,使用100PX的默认值
    var whdef = 100 / 916;// 表示1920的设计图,使用100PX的默认值
    var wH = window.innerHeight;// 当前窗口的高度
    var wW = window.innerWidth;// 当前窗口的宽度
    // var rem = wW * whdef;// 以默认比例值乘以当前窗口宽度,得到该宽度下的相应FONT-SIZE值
    var rem = wH * whdef;// 以默认比例值乘以当前窗口宽度,得到该宽度下的相应FONT-SIZE值
    $('html').css('font-size', rem + "px");
    //加载统计图1---当天工作
    var tmp_data = [[12, '0:0', 87],
        [12, '0:10', 99],
        [12, '0:20', 95],
        [12, '0:30', 91],
        [12, '0:40', 94],
        [12, '0:50', 81],
        [12, '1:0', 101],
        [12, '1:10', 90],
        [12, '1:20', 87],
        [12, '1:30', 83],
        [12, '1:40', 82],
        [12, '1:50', 73],
        [12, '2:0', 72],
        [12, '2:10', 92],
        [12, '2:20', 84],
        [12, '2:30', 85],
        [12, '2:40', 99],
        [12, '2:50', 90],
        [12, '3:0', 87],
        [12, '3:10', 83],
        [12, '3:20', 85],
        [12, '3:30', 89],
        [12, '3:40', 93],
        [12, '3:50', 67],
        [12, '4:0', 87],
        [12, '4:10', 91],
        [12, '4:20', 91],
        [12, '4:30', 65],
        [12, '4:40', 85],
        [12, '4:50', 75],
        [12, '5:0', 81],
        [12, '5:10', 84],
        [12, '5:20', 87],
        [12, '5:30', 69],
        [12, '5:40', 77],
        [12, '5:50', 76],
        [12, '6:0', 77],
        [12, '6:10', 84],
        [12, '6:20', 99],
        [12, '6:30', 80],
        [12, '6:40', 76],
        [12, '6:50', 84],
        [12, '7:0', 72],
        [12, '7:10', 67],
        [12, '7:20', 62],
        [12, '7:30', 81],
        [12, '7:40', 85],
        [12, '7:50', 86],
        [12, '8:0', 81],
        [12, '8:10', 86],
        [12, '8:20', 92],
        [12, '8:30', 93],
        [12, '8:40', 94],
        [12, '8:50', 94],
        [12, '9:0', 89],
        [12, '9:10', 80],
        [12, '9:20', 87],
        [12, '9:30', 80],
        [12, '9:40', 100],
        [12, '9:50', 81],
        [12, '10:0', 93],
        [12, '10:10', 115],
        [12, '10:20', 98],
        [12, '10:30', 90],
        [12, '10:40', 77],
        [12, '10:50', 85],
        [12, '11:0', 85],
        [12, '11:10', 85],
        [12, '11:20', 73],
        [12, '11:30', 49],
        [12, '11:40', 58],
        [12, '11:50', 81],
        [12, '12:0', 71],
        [12, '12:10', 74],
        [12, '12:20', 68],
        [12, '12:30', 72],
        [12, '12:40', 61],
        [12, '12:50', 90],
        [12, '13:0', 75],
        [12, '13:10', 94],
        [12, '13:20', 93],
        [12, '13:30', 86],
        [12, '13:40', 104],
        [12, '13:50', 97],
        [12, '14:0', 90],
        [12, '14:10', 87],
        [12, '14:20', 80],
        [12, '14:30', 68],
        [12, '14:40', 85],
        [12, '14:50', 74],
        [12, '15:0', 81],
        [12, '15:10', 73],
        [12, '15:20', 82],
        [12, '15:30', 81],
        [12, '15:40', 78],
        [12, '15:50', 84],
        [12, '16:0', 82],
        [12, '16:10', 78],
        [12, '16:20', 84],
        [12, '16:30', 82],
        [12, '16:40', 72],
        [12, '16:50', 79],
        [12, '17:0', 72],
        [12, '17:10', 64],
        [12, '17:20', 49],
        [12, '17:30', 60],
        [12, '17:40', 53],
        [12, '17:50', 61],
        [12, '18:0', 52],
        [12, '18:10', 55],
        [12, '18:20', 72],
        [12, '18:30', 81],
        [12, '18:40', 58],
        [12, '18:50', 64],
        [12, '19:0', 65],
        [12, '19:10', 65],
        [12, '19:20', 66],
        [12, '19:30', 75],
        [12, '19:40', 81],
        [12, '19:50', 85],
        [12, '20:0', 72],
        [12, '20:10', 65],
        [12, '20:20', 80],
        [12, '20:30', 60],
        [12, '20:40', 61],
        [12, '20:50', 89],
        [12, '21:0', 82],
        [12, '21:10', 79],
        [12, '21:20', 71],
        [12, '21:30', 64],
        [12, '21:40', 89],
        [12, '21:50', 85],
        [12, '22:0', 103],
        [12, '22:10', 87],
        [12, '22:20', 87],
        [12, '22:30', 69],
        [12, '22:40', 80],
        [12, '22:50', 74],
        [12, '23:0', 69],
        [12, '23:10', 73],
        [12, '23:20', 71],
        [12, '23:30', 81],
        [12, '23:40', 84],
        [12, '23:50', 109],
        [12, '24:0', 111],
        [12, '24:10', 104],
        [12, '24:20', 90],
        [12, '24:30', 82],
        [12, '24:40', 70],
        [12, '24:50', 79],
        [12, '25:0', 82],
        [12, '25:10', 66],
        [12, '25:20', 83],
        [12, '25:30', 84],
        [12, '25:40', 93],
        [12, '25:50', 84],
        [12, '26:0', 95],
        [12, '26:10', 111],
        [12, '26:20', 87],
        [12, '26:30', 86],
        [12, '26:40', 106],
        [12, '26:50', 105],
        [12, '27:0', 106],
        [12, '27:10', 112],
        [12, '27:20', 118],
        [12, '27:30', 102],
        [12, '27:40', 93],
        [12, '27:50', 111],
        [12, '28:0', 82],
        [12, '28:10', 89],
        [12, '28:20', 100],
        [12, '28:30', 75],
        [12, '28:40', 80],
        [12, '28:50', 76],
        [12, '29:0', 90],
        [12, '29:10', 92],
        [12, '29:20', 91],
        [12, '29:30', 89],
        [12, '29:40', 83],
        [12, '29:50', 85],
        [12, '30:0', 82],
        [12, '30:10', 70],
        [12, '30:20', 71],
        [12, '30:30', 80],
        [12, '30:40', 69],
        [12, '30:50', 64],
        [12, '31:0', 51],
        [12, '31:10', 63],
        [12, '31:20', 67],
        [12, '31:30', 61],
        [12, '31:40', 50],
        [12, '31:50', 65],
        [12, '32:0', 70],
        [12, '32:10', 63],
        [12, '32:20', 76],
        [12, '32:30', 81],
        [12, '32:40', 73],
        [12, '32:50', 91],
        [12, '33:0', 90],
        [12, '33:10', 79],
        [12, '33:20', 81],
        [12, '33:30', 77],
        [12, '33:40', 87],
        [12, '33:50', 98],
        [12, '34:0', 91],
        [12, '34:10', 104],
        [12, '34:20', 103],
        [12, '34:30', 106],
        [12, '34:40', 115],
        [12, '34:50', 118],
        [12, '35:0', 110],
        [12, '35:10', 117],
        [12, '35:20', 121],
        [12, '35:30', 102],
        [12, '35:40', 99],
        [12, '35:50', 106],
        [12, '36:0', 82],
        [12, '36:10', 77],
        [12, '36:20', 95],
        [12, '36:30', 79],
        [12, '36:40', 85],
        [12, '36:50', 81],
        [12, '37:0', 84],
        [12, '37:10', 104],
        [12, '37:20', 106],
        [12, '37:30', 97],
        [12, '37:40', 98],
        [12, '37:50', 103],
        [12, '38:0', 85],
        [12, '38:10', 79],
        [12, '38:20', 77],
        [12, '38:30', 75],
        [12, '38:40', 66],
        [12, '38:50', 77],
        [12, '39:0', 72],
        [12, '39:10', 70],
        [12, '39:20', 65],
        [12, '39:30', 74],
        [12, '39:40', 74],
        [12, '39:50', 75],
        [12, '40:0', 94],
        [12, '40:10', 101],
        [12, '40:20', 106],
        [12, '40:30', 109],
        [12, '40:40', 103],
        [12, '40:50', 93],
        [12, '41:0', 91],
        [12, '41:10', 106],
        [12, '41:20', 101],
        [12, '41:30', 93],
        [12, '41:40', 80],
        [12, '41:50', 81],
        [12, '42:0', 78],
        [12, '42:10', 87],
        [12, '42:20', 93],
        [12, '42:30', 96],
        [12, '42:40', 104],
        [12, '42:50', 127],
        [12, '43:0', 103],
        [12, '43:10', 102],
        [12, '43:20', 101],
        [12, '43:30', 91],
        [12, '43:40', 91],
        [12, '43:50', 105],
        [12, '44:0', 102],
        [12, '44:10', 84],
        [12, '44:20', 91],
        [12, '44:30', 79],
        [12, '44:40', 78],
        [12, '44:50', 87],
        [12, '45:0', 93],
        [12, '45:10', 105],
        [12, '45:20', 79],
        [12, '45:30', 83],
        [12, '45:40', 86],
        [12, '45:50', 86],
        [12, '46:0', 91],
        [12, '46:10', 105],
        [12, '46:20', 93],
        [12, '46:30', 96],
        [12, '46:40', 99],
        [12, '46:50', 91],
        [12, '47:0', 89],
        [12, '47:10', 77],
        [12, '47:20', 89],
        [12, '47:30', 87],
        [12, '47:40', 90],
        [12, '47:50', 81],
        [12, '48:0', 98],
        [12, '48:10', 92],
        [12, '48:20', 90],
        [12, '48:30', 93],
        [12, '48:40', 98],
        [12, '48:50', 101],
        [12, '49:0', 105],
        [12, '49:10', 103],
        [12, '49:20', 95],
        [12, '49:30', 100],
        [12, '49:40', 107],
        [12, '49:50', 105],
        [12, '50:0', 86],
        [12, '50:10', 90],
        [12, '50:20', 88],
        [12, '50:30', 96],
        [12, '50:40', 86],
        [12, '50:50', 83],
        [12, '51:0', 71],
        [12, '51:10', 79],
        [12, '51:20', 76],
        [12, '51:30', 90],
        [12, '51:40', 103],
        [12, '51:50', 87],
        [12, '52:0', 90],
        [12, '52:10', 96],
        [12, '52:20', 96],
        [12, '52:30', 81],
        [12, '52:40', 101],
        [12, '52:50', 102],
        [12, '53:0', 106],
        [12, '53:10', 94],
        [12, '53:20', 95],
        [12, '53:30', 110],
        [12, '53:40', 101],
        [12, '53:50', 112],
        [12, '54:0', 98],
        [12, '54:10', 96],
        [12, '54:20', 106],
        [12, '54:30', 105],
        [12, '54:40', 82],
        [12, '54:50', 97],
        [12, '55:0', 87],
        [12, '55:10', 83],
        [12, '55:20', 94],
        [12, '55:30', 82],
        [12, '55:40', 77],
        [12, '55:50', 91],
        [12, '56:0', 84],
        [12, '56:10', 105],
        [12, '56:20', 99],
        [12, '56:30', 101],
        [12, '56:40', 86],
        [12, '56:50', 88],
        [12, '57:0', 73],
        [12, '57:10', 77],
        [12, '57:20', 96],
        [12, '57:30', 92],
        [12, '57:40', 77],
        [12, '57:50', 86],
        [12, '58:0', 85],
        [12, '58:10', 78],
        [12, '58:20', 78],
        [12, '58:30', 70],
        [12, '58:40', 79],
        [12, '58:50', 79],
        [12, '59:0', 94],
        [12, '59:10', 85],
        [12, '59:20', 109],
        [12, '59:30', 105],
        [12, '59:40', 110],
        [12, '59:50', 100],];
    let line_date = [];
    let line_data = [];

    for (let i = 0; i < tmp_data.length; i++) {
        line_date.push(tmp_data[i][1]);
        line_data.push(tmp_data[i][2]);
    }
    loadoOption1(line_date, line_data);

    // 加载日力图
    var tmp_hours = ["\u4e1c\u5c71\u5927\u9053", "\u9ec4\u9f99\u5927\u9053\u4e09\u6bb5", "\u4e8c\u6c5f\u8def", "\u5e9c\u6cb3\u8def\u4e09\u6bb5", "\u6b63\u5174\u8def", "\u5170\u6c9f\u8def", "\u5e7f\u4e1c\u8857", "\u534e\u5e9c\u5927\u9053", "\u534e\u9633\u5927\u9053", "\u4e3d\u90fd\u8857", "\u4e91\u9f99\u8def", "\u5e9c\u6cb3\u8def\u4e00\u6bb5", "\u6e7e\u6cb3\u8857", "\u9f99\u9a6c\u5927\u9053", "\u4e2d\u5f6d\u8def", "\u817e\u98de\u5341\u4e8c\u8def", "\u5e90\u5c71\u5927\u9053", "\u987a\u6cb3\u8857", "\u9e93\u5c71\u5927\u9053", "\u9526\u6c5f\u8def\u4e8c\u6bb5", "\u6d77\u660c\u5317\u8def", "\u5357\u6d77\u8def", "\u4e8c\u6c5f\u8def\u4e00\u6bb5", "\u5143\u534e\u8def", "\u7267\u534e\u8def", "\u53cc\u534e\u8def", "\u5e7f\u4e1c\u8def", "\u534e\u677f\u8def", "\u534e\u5f6d\u8def", "\u5e7f\u90fd\u4e0a\u8857"];
    var tmp_days = ["11", "10", "09", "12", "13", "14", "15"];

    var tmp_data2 = [[0, 0, 59], [0, 1, 75], [0, 2, 24], [0, 3, 75], [0, 4, 28], [0, 5, 12], [0, 6, -13], [0, 7, 13], [0, 8, 9], [0, 9, 11], [0, 10, 7], [0, 11, 6], [0, 12, -5], [0, 13, 10], [0, 14, 8], [0, 15, -7], [0, 16, -4], [0, 17, -8], [0, 18, 13], [0, 19, -10], [0, 20, -4], [0, 21, -8], [0, 22, -66], [0, 23, -66], [0, 24, 32], [0, 25, -47], [0, 26, -30], [0, 27, -20], [0, 28, -60], [0, 29, -69], [1, 0, 34], [1, 1, 52], [1, 2, 7], [1, 3, 56], [1, 4, 14], [1, 5, 12], [1, 6, -7], [1, 7, 9], [1, 8, -2], [1, 9, 83], [1, 10, 4], [1, 11, 6], [1, 12, 2], [1, 13, 4], [1, 14, 2], [1, 15, -13], [1, 16, -7], [1, 17, -7], [1, 18, 12], [1, 19, -11], [1, 20, -16], [1, 21, -4], [1, 22, -43], [1, 23, -56], [1, 24, 38], [1, 25, -49], [1, 26, -15], [1, 27, -10], [1, 28, -38], [1, 29, -42], [2, 0, 12], [2, 1, 55], [2, 2, 11], [2, 3, 14], [2, 4, 41], [2, 5, 20], [2, 6, -5], [2, 7, -19], [2, 8, 1], [2, 9, -30], [2, 10, 3], [2, 11, 5], [2, 12, 4], [2, 13, 6], [2, 14, 9], [2, 15, -16], [2, 16, -7], [2, 17, -9], [2, 18, -22], [2, 19, -7], [2, 20, -3], [2, 21, 48], [2, 22, -32], [2, 23, -46], [2, 24, 29], [2, 25, -34], [2, 26, -12], [2, 27, 6], [2, 28, -14], [2, 29, -29], [3, 0, 57], [3, 1, 45], [3, 2, 41], [3, 3, 41], [3, 4, 37], [3, 5, 32], [3, 6, 20], [3, 7, 17], [3, 8, 13], [3, 9, 12], [3, 10, 10], [3, 11, 9], [3, 12, 9], [3, 13, 7], [3, 14, 7], [3, 15, -6], [3, 16, -7], [3, 17, -9], [3, 18, -10], [3, 19, -11], [3, 20, -15], [3, 21, -18], [3, 22, -23], [3, 23, -27], [3, 24, -28], [3, 25, -31], [3, 26, -35], [3, 27, -37], [3, 28, -43], [3, 29, -59], [4, 0, 33], [4, 1, 19], [4, 2, 16], [4, 3, 22], [4, 4, 27], [4, 5, 50], [4, 6, 19], [4, 7, -11], [4, 8, -5], [4, 9, -17], [4, 10, 11], [4, 11, 21], [4, 12, 3], [4, 13, -5], [4, 14, -5], [4, 15, -1], [4, 16, 3], [4, 17, 2], [4, 18, 3], [4, 19, 0], [4, 20, 10], [4, 21, -15], [4, 22, -30], [4, 23, -12], [4, 24, -13], [4, 25, -19], [4, 26, -3], [4, 27, -29], [4, 28, -59], [4, 29, -32], [5, 0, 24], [5, 1, 23], [5, 2, 16], [5, 3, 42], [5, 4, 18], [5, 5, 24], [5, 6, -13], [5, 7, 25], [5, 8, -16], [5, 9, 8], [5, 10, 22], [5, 11, 39], [5, 12, 1], [5, 13, -11], [5, 14, 0], [5, 15, -14], [5, 16, -17], [5, 17, -1], [5, 18, 14], [5, 19, -10], [5, 20, -9], [5, 21, -26], [5, 22, -41], [5, 23, -34], [5, 24, -3], [5, 25, -10], [5, 26, -8], [5, 27, -5], [5, 28, -68], [5, 29, -21], [6, 0, 9], [6, 1, -1], [6, 2, 28], [6, 3, 21], [6, 4, 10], [6, 5, 49], [6, 6, 27], [6, 7, 28], [6, 8, -8], [6, 9, 43], [6, 10, 13], [6, 11, 28], [6, 12, 3], [6, 13, -34], [6, 14, 0], [6, 15, -2], [6, 16, -3], [6, 17, -1], [6, 18, 19], [6, 19, -21], [6, 20, -11], [6, 21, 13], [6, 22, -49], [6, 23, -25], [6, 24, 12], [6, 25, -48], [6, 26, -31], [6, 27, -34], [6, 28, -48], [6, 29, -16]];
    loadoOption2(tmp_hours, tmp_days, tmp_data2);

    loadoOption_multiple();

});


//加载折线图，填充类型
function loadoOption1(x_data, y_data) {
    myChart1.clear();

    // 每小时共1200个时间点，横坐标为1200个点，然后再根据每个时间点统计次数嘛？

    option = {
        tooltip: {
            trigger: 'axis',
            position: function (pt) {
                return [pt[0], '10%'];
            }
        },
        toolbox: {
            feature: {
                dataZoom: {
                    yAxisIndex: 'none'
                },
                restore: {},
                saveAsImage: {}
            }
        },
        xAxis: {
            type: 'category',
            boundaryGap: false,
            data: x_data,
            name: "时间/10s",
            nameTextStyle: {
                color: "#fff"
            },
            axisLabel: {
                color: "#fff",
            }
        },
        yAxis: {
            type: 'value',
            boundaryGap: [0, '50%'],
            name: "车辆流量数/次",
            nameTextStyle: {
                color: "#ffffff"
            },
            axisLabel: {
                color: "#fff",
            }
        },
        dataZoom: [{
            type: 'inside',
            start: 0,
            end: 10
        }, {
            start: 0,
            end: 10,
            handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
            handleSize: '80%',
            handleStyle: {
                color: '#fff',
                shadowBlur: 3,
                shadowColor: 'rgba(0, 0, 0, 0.6)',
                shadowOffsetX: 2,
                shadowOffsetY: 2
            }
        }],
        series: [
            {
                name: '模拟数据',
                type: 'line',
                smooth: true,
                symbol: 'none',
                sampling: 'average',
                itemStyle: {
                    color: 'rgb(255, 70, 131)'
                },
                areaStyle: {
                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                        offset: 0,
                        color: 'rgb(255, 158, 68)'
                    }, {
                        offset: 1,
                        color: 'rgb(255, 70, 131)'
                    }])
                },
                data: y_data
            }
        ]
    };

    myChart1.setOption(option);


}


// 加载日力图
function loadoOption2(x_data, y_data, z_data) {
    myChart2.clear();

    var app = {};

    app.title = '笛卡尔坐标系上的热力图';


    data = z_data.map(function (item) {
        return [item[1], item[0], item[2] || '-'];
    });

    option = {
        tooltip: {
            position: 'top'
        },
        animation: false,
        grid: {
            height: '50%',
            y: '10%'
        },
        xAxis: {
            type: 'category',
            data: x_data,
            splitArea: {
                show: true
            },
            axisLabel: {
                color: "#fff",
                interval:0,
                rotate: -90
            }
        },
        yAxis: {
            type: 'category',
            data: y_data,
            splitArea: {
                show: true
            },
            axisLabel: {
                color: "#fff",
            }
        },
        visualMap: {
            min: 0,
            max: 10,
            calculable: true,
            orient: 'horizontal',
            left: 'center',
            bottom: '20px'
        },
        series: [{
            name: 'Punch Card',
            type: 'heatmap',
            data: data,
            label: {
                normal: {
                    show: true
                }
            },
            itemStyle: {
                emphasis: {
                    shadowBlur: 10,
                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                }
            }
        }]
    };
    myChart2.setOption(option);

}

//加载折线图，填充类型
function loadoOption_multiple() {
    myChart3.clear();

    // 每小时共1200个时间点，横坐标为1200个点，然后再根据每个时间点统计次数嘛？

    var app = {};
    option = null;


    var grids = [];
    var xAxes = [];
    var yAxes = [];
    var series = [];
    var titles = [];
//var count = 0;

    $.get('../static/data/seconds_number_1.json', function (result) {

        for (var count = 0; count < 24; count++) {
            var data = [];
            for (var n = 0; n < result.length; n++) {
                if (result[n][0] === count) {
                    data.push([result[n][1], result[n][2]]);
                }
            }
            //		console.log(data);
            grids.push({
                show: true,
                borderWidth: 0,
                backgroundColor: '#0078A8',
                shadowColor: 'rgba(0, 0, 0, 0.3)',
                shadowBlur: 2
            });
            xAxes.push({
                type: 'category',
                show: false,
//			min: 0,
//			max: 1,
                gridIndex: count
            });
            yAxes.push({
                type: 'value',
                show: false,
//			min: -0.4,
//			max: 1.4,
                gridIndex: count
            });
            series.push({
                name: count,
                type: 'line',
                smooth: true,
                xAxisIndex: count,
                yAxisIndex: count,
                data: data,
                showSymbol: false,
                animationEasing: count,
                animationDuration: 1000
            });
            titles.push({
                textAlign: 'center',
                text: count,
                textStyle: {
                    fontSize: 12,
                    fontWeight: 'normal'
                }
            });
        }

        var rowNumber = Math.ceil(Math.sqrt(count));
        echarts.util.each(grids, function (grid, idx) {
            grid.left = ((idx % rowNumber) / rowNumber * 100 + 0.5) + '%';
            grid.top = (Math.floor(idx / rowNumber) / rowNumber * 100 + 0.5) + '%';
            grid.width = (1 / rowNumber * 100 - 1) + '%';
            grid.height = (1 / rowNumber * 100 - 1) + '%';

            titles[idx].left = parseFloat(grid.left) + parseFloat(grid.width) / 2 + '%';
            titles[idx].top = parseFloat(grid.top) + '%';
        });

        option = {
            title: titles.concat([{
//			text: 'Different Easing Functions',
                top: 'bottom',
                left: 'center'
            }]),
            grid: grids,
            xAxis: xAxes,
            yAxis: yAxes,
            series: series
        };
        if (option && typeof option === "object") {
            myChart3.setOption(option, true);
        }

    });


}


